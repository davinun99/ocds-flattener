select 
	r.ocid,
	data['compiledRelease']['id'] as "id",
	data['compiledRelease']['tender']['id'] as "tender_id",
	data['compiledRelease']['tender']['title'] as "tender.title",
	data['compiledRelease']['tender']['status'] as "tender.status",
	data['compiledRelease']['tender']['awardCriteria'] as "tender.awardCriteria",
	data['compiledRelease']['tender']['awardCriteriaDetails'] as "tender.awardCriteriaDetails",
	data['compiledRelease']['tender']['bidOpening']['date'] as "tender.bidOpening.date",
	data['compiledRelease']['tender']['bidOpening']['address']['streetAddress'] as "tender.bidOpening.address.streetAddress",
	data['compiledRelease']['tender']['submissionMethodDetails'] as "tender.submissionMethodDetails",
	data['compiledRelease']['tender']['eligibilityCriteria'] as "tender.eligibilityCriteria",
	data['compiledRelease']['tender']['statusDetails'] as "tender.statusDetails",
	data['compiledRelease']['tender']['enquiriesAddress']['streetAddress']as "tender.enquiriesAddress.streetAddress",
	data['compiledRelease']['tender']['mainProcurementCategoryDetails'] as "tender.mainProcurementCategoryDetails",
	data['compiledRelease']['tender']['hasEnquiries'] as "tender.hasEnquiries",
	data['compiledRelease']['tender']['value']['amount'] as "tender.value.amount",
	data['compiledRelease']['tender']['value']['currency'] as "tender.value.currency",
	data['compiledRelease']['tender']['datePublished'] as "tender.datePublished",
	data['compiledRelease']['tender']['tenderPeriod']['startDate'] as "tender.tenderPeriod.startDate",
	data['compiledRelease']['tender']['tenderPeriod']['endDate'] as "tender.tenderPeriod.endDate",
	data['compiledRelease']['tender']['tenderPeriod']['durationInDays'] as "tender.tenderPeriod.durationInDays",
	data['compiledRelease']['tender']['awardPeriod']['startDate'] as "tender.awardPeriod.startDate",
	data['compiledRelease']['tender']['enquiryPeriod']['endDate'] as "tender.enquiryPeriod.endDate",
	data['compiledRelease']['tender']['enquiryPeriod']['startDate'] as "tender.enquiryPeriod.startDate",
	data['compiledRelease']['tender']['enquiryPeriod']['durationInDays'] as "tender.enquiryPeriod.durationInDays",
	data['compiledRelease']['tender']['mainProcurementCategory'] as "tender.mainProcurementCategory",	
	data['compiledRelease']['tender']['procurementMethod'] as "tender.procurementMethod",
	data['compiledRelease']['tender']['procurementMethodDetails'] as "tender.procurementMethodDetails",	
	data['compiledRelease']['tender']['procuringEntity']['id'] as "tender.procuringEntity.id",
	data['compiledRelease']['tender']['procuringEntity']['name'] as "tender.procuringEntity.name",
	data['compiledRelease']['tender']['numberOfTenderers'] as "tender.numberOfTenderers",
	data['compiledRelease']['language'] as "language",	
	data['compiledRelease']['ocid'] as "ocid",
	data['compiledRelease']['date'] as "date",
	data['compiledRelease']['initiationType'] as "initiationType",
	data['compiledRelease']['buyer']['id'] as "buyer.id",
	data['compiledRelease']['buyer']['name'] as "buyer.name",
	data['compiledRelease']['planning']['identifier'] as "planning.identifier",
	data['compiledRelease']['planning']['estimatedDate'] as "planning.estimatedDate",
	data['compiledRelease']['planning']['budget']['description'] as "planning.budget.description",
	data['compiledRelease']['planning']['budget']['amount']['currency'] as "planning.budget.amount.currency",
	data['compiledRelease']['planning']['budget']['amount']['amount'] as "planning.budget.amount.amount",
	data['compiledRelease']['tag'] as "tag",
	data['compiledRelease']['tender']['coveredBy'] as "tender.coveredBy",
	data['compiledRelease']['tender']['techniques']['hasElectronicAuction'] as "tender.techniques.hasElectronicAuction",
	data['compiledRelease']['tender']['contractPeriod']['durationInDays'] as "tender.contractPeriod.durationInDays",
	data['compiledRelease']['tender']['contractPeriod']['maxExtentDate'] as "tender.contractPeriod.maxExtentDate",
	data['compiledRelease']['tender']['procurementMethodRationale'] as "tender.procurementMethodRationale",
	data['compiledRelease']['tender']['procurementIntention']['id'] as "tender.procurementIntention.id",
	data['compiledRelease']['tender']['procurementIntention']['uri'] as "tender.procurementIntention.uri",
	data['compiledRelease']['tender']['procurementIntention']['rationale'] as "tender.procurementIntention.rationale",
	data['compiledRelease']['tender']['procurementIntention']['category'] as "tender.procurementIntention.category",
	data['compiledRelease']['tender']['procurementIntention']['title'] as "tender.procurementIntention.title",
	data['compiledRelease']['tender']['procurementIntention']['description'] as "tender.procurementIntention.description",
	data['compiledRelease']['tender']['procurementIntention']['startDate'] as "tender.procurementIntention.startDate",
	data['compiledRelease']['tender']['procurementIntention']['publishedDate'] as "tender.procurementIntention.publishedDate",
	data['compiledRelease']['tender']['procurementIntention']['procuringEntity']['id'] as "tender.procurementIntention.procuringEntity.id",
	data['compiledRelease']['tender']['procurementIntention']['procuringEntity']['name'] as "tender.procurementIntention.procuringEntity.name",
	data['compiledRelease']['tender']['procurementIntention']['status'] as "tender.procurementIntention.status",
	data['compiledRelease']['tender']['procurementIntention']['statusDetails'] as "tender.procurementIntention.statusDetails",
	data['compiledRelease']['secondStage']['id'] as "secondStage.id",
	data['compiledRelease']['tender']['techniques']['hasFrameworkAgreement'] as "tender.techniques.hasFrameworkAgreement",
	data['compiledRelease']['tender']['contractPeriod']['startDate'] as "tender.contractPeriod.startDate",
	data['compiledRelease']['tender']['contractPeriod']['endDate'] as "tender.contractPeriod.endDate",
	(select STRING_AGG ( d['id']::text, '||' ) from jsonb_array_elements(data['compiledRelease']['parties']) d) as "parties.id.concat",
	(select string_agg(d['details']['legalEntityTypeDetail']::text, '||') from jsonb_array_elements(data['compiledRelease']['parties']) d) as "parties.details.legalEntityTypeDetail.concat",
	(select string_agg(d['details']['entityType']::text, '||') from jsonb_array_elements(data['compiledRelease']['parties']) d) as "parties.details.entityType.concat",
	(select string_agg(d['name']::text, '||') from jsonb_array_elements(data['compiledRelease']['parties']) d) as "parties.name.concat",
	(select string_agg(d['roles']::text, '||') from jsonb_array_elements(data['compiledRelease']['parties']) d) as "parties.roles.concat",
	(select string_agg(d['classification']['id']::text, '||') from jsonb_array_elements(data['compiledRelease']['planning']['items']) d) as "planning.items.classification.id.concat",
	(select string_agg(d['classification']['description']::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['items']) d) as "tender.items.classification.description.concat",
	(select string_agg(d::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['additionalProcurementCategories']) d) as "tender.additionalProcurementCategories.concat",
	(select string_agg(d::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['submissionMethod']) d) as "tender.submissionMethod.concat",
	(select string_agg(d['id']::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['tenderers']) d) as "tender.tenderers.id.concat",
	(select string_agg(d['documentTypeDetails']::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['documents']) d) as "tender.documents.documentTypeDetails.concat",
	COALESCE(jsonb_array_length(data['compiledRelease']['tender']['lots']), 0) as "tender.lots.count",
	COALESCE(jsonb_array_length(data['compiledRelease']['tender']['enquiries']), 0) as "tender.enquiries.count",
	(select string_agg(d['id']::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['notifiedSuppliers']) d) as "tender.notifiedSuppliers.id.concat",
	(select string_agg(d['id']::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['criteria']) d) as "tender.criteria.id.concat",
	(select string_agg(d::text, '||') from jsonb_array_elements(data['compiledRelease']['tender']['coveredBy']) d) as "tender.coveredBy.concat",
	COALESCE(jsonb_array_length(data['compiledRelease']['awards']), 0) as "awards.count",
	(select string_agg(d['status']::text, '||') from jsonb_array_elements(data['compiledRelease']['awards']) d) as "awards.status.concat",
	(select string_agg(d['statusDetails']::text, '||') from jsonb_array_elements(data['compiledRelease']['awards']) d) as "awards.statusDetails.concat",
	--FALTA LOGICA awards.value.amount
	--FALTA awards.items.classification.description
	--FALTA awards.suppliers.id
	--FALTA awards.documents.DocumentTypeDetails
	-- 	awards.amendments
	-- awards.relatedLots
	-- awards.requirementResponses
	-- awards.relatedBids
	COALESCE(jsonb_array_length(data['compiledRelease']['contracts']), 0) as "contracts.count",
	(select string_agg(d['status']::text, '||') from jsonb_array_elements(data['compiledRelease']['contracts']) d) as "contracts.status.concat",
	(select string_agg(d['statusDetails']::text, '||') from jsonb_array_elements(data['compiledRelease']['contracts']) d) as "contracts.statusDetails.concat"
	-- FALTA LOGICA contracts.value.amount
	-- contracts.documents.DocumentTypeDetails
	-- contracts.implementation.transactions
	-- contracts.implementation.documents.DocumentTypeDetails
	-- contracts.implementation.purchaseOrders
FROM RECORD r join data d on d.id = r.data_id 
LIMIT 50